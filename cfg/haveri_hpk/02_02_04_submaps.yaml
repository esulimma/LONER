baseline: defaults.yaml
dataset: ~/data/haveri_hpk/02_02_04/harveri_hpk_02_02_04_adjusted.bag
calibration: NULL
groundtruth_traj: ~/data/haveri_hpk/02_02_04/ground_truth_traj.csv
experiment_name: 02_02_04_submaps
dataset_family: hpk
changes:
  calibration:
    lidar_to_camera:
      xyz: [-0.05984655, -0.19272494, -0.12220825]
      orientation: [ 2.96490977e-04, -7.96265957e-01,  6.04946590e-01, -2.46003922e-04] 
    camera_intrinsic:
      k: [[487.44329833984375, 0.0, 325.61627197265625],[0.0, 487.44329833984375, 189.09432983398438],[ 0.0,  0.0, 1.0]]
      distortion: [0.0, 0.0, 0.0, 0.0, 0.0]
      new_k: NULL
      width: 640
      height: 360
  debug:
    global_enabled: True
    flags:
      pytorch_detect_anomaly: False
      draw_comp_graph: False
      draw_rays_eps: False
      write_ray_point_clouds: False
      store_ray: False
      write_frame_point_clouds: False
      write_icp_point_clouds: False
      profile_optimizer: False
      use_groundtruth_poses: False
      draw_loss_distribution: False
      log_losses: False
      profile: False
      draw_samples: False
      visualize_loss: False
      log_times: False
  system:
    sky_segmentation: &sky_seg_enabled True
    world_cube:
      compute_from_groundtruth: True
      trajectory_bounding_box:
        x: [-51, 39]
        y: [-97,39]
        z: [-2.75,19.15]
    ros_names:
      camera: "/zed2i/zed_node/rgb/image_rect_color/"
      lidar: "hesai/pandar"
      camera_suffix: "compressed"
      topic_prefix: "" 
  mapper:
    optimizer:
      num_samples:
        lidar: 512
        sky: 64
      rays_selection:
        strategy: MASK # FIXED
      samples_selection:
        strategy: OGM # UNIFORM
      model_config:
        data:
          ray_range: &ray_range [2.5, 45]
        model:
          ray_range: *ray_range
          render:
            N_samples_train: 512 #128   512  # number of samples per ray
            N_samples_test: 2048 #512   2048   # number of samples per ray during testing
            retraw: True
            lindisp: False          # sampling linearly in disparity rather than depth
            perturb: 1.             # set to 0. for no jitter, 1. for jitter
            white_bkgd: False
            raw_noise_std: 1.       # std dev of noise added to regularize sigma_a output, 1e0 recommended
            chunk: 32768  # 16384            # number of rays processed in parallel, decrease if running out of memory
            netchunk: 0           # number of pts sent through network in parallel, decrease if running out of memory. If 0, process all pts together
          occ_model:
              voxel_size: 100
              lr: 0.0001
              N_iters_acc: 10    # number of iters to accumulate gradients before stepping optimizer

        train:
          lrate_sigma_mlp: 0.01             # learning rate
          lrate_rgb: 0.01                  # learning rate
          lrate_pose: 0.001
          lrate_gamma: 1.0
          decay_rate: 0.0005

          pose_lrate_gamma: 1.

          rgb_weight_decay: 1.e-6
          sigma_weight_decay: 1.e-6
          
        loss:
          loss_selection: L1_JS # L1_LOS, L2_LOS, L1_JS, L2_JS
          JS_loss:
              min_js_score: 0.1
              max_js_score: 10.
              alpha: 1.

          decay_los_lambda: True          # boolean to enable decay
          los_lambda: 1000.0                # Depth lambda used for loss.
          min_los_lambda: 10.              # Minimum value after decay
          los_lambda_decay_rate: 0.0001
          los_lambda_decay_steps: 15000
              
          decay_depth_eps: True              # boolean to enable decay
          depth_eps: 3.0                     # starting tolerance for line of sight loss in euclidean space
          min_depth_eps: 0.5                 # Minimum value after decay
          depth_eps_decay_rate: 0.95        # rate for decay, setting smaller value decay faster
          depth_eps_decay_steps: 100         # step for decay, setting smaller value decay faster

          depthloss_lambda: 0.005      # weight for lidar termination depth
  tracker:
    compute_sky_rays: *sky_seg_enabled
meshing_bounding_box:
  x: [-33, 43]
  y: [-40,75] #driving direction
  z: [-6.75,19.15]
lidar_vertical_fov: [-52.1, 52.1]
